/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Org.OpenAPITools.Client;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// RequiredClass
    /// </summary>
    [DataContract(Name = "RequiredClass")]
    public partial class RequiredClass : IEquatable<RequiredClass>
    {
        /// <summary>
        /// Defines RequiredNullableEnumInteger
        /// </summary>
        public enum RequiredNullableEnumIntegerEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_MINUS_1 for value: -1
            /// </summary>
            NUMBER_MINUS_1 = -1
        }


        /// <summary>
        /// Gets or Sets RequiredNullableEnumInteger
        /// </summary>
        [DataMember(Name = "required_nullable_enum_integer", IsRequired = true, EmitDefaultValue = true)]
        public RequiredNullableEnumIntegerEnum? RequiredNullableEnumInteger { get; set; }
        /// <summary>
        /// Defines RequiredNotnullableEnumInteger
        /// </summary>
        public enum RequiredNotnullableEnumIntegerEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_MINUS_1 for value: -1
            /// </summary>
            NUMBER_MINUS_1 = -1
        }


        /// <summary>
        /// Gets or Sets RequiredNotnullableEnumInteger
        /// </summary>
        [DataMember(Name = "required_notnullable_enum_integer", IsRequired = true, EmitDefaultValue = true)]
        public RequiredNotnullableEnumIntegerEnum RequiredNotnullableEnumInteger { get; set; }
        /// <summary>
        /// Defines NotrequiredNullableEnumInteger
        /// </summary>
        public enum NotrequiredNullableEnumIntegerEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_MINUS_1 for value: -1
            /// </summary>
            NUMBER_MINUS_1 = -1
        }


        /// <summary>
        /// Gets or Sets NotrequiredNullableEnumInteger
        /// </summary>
        [DataMember(Name = "notrequired_nullable_enum_integer", EmitDefaultValue = true)]
        public Option<NotrequiredNullableEnumIntegerEnum?> NotrequiredNullableEnumInteger { get; set; }
        /// <summary>
        /// Defines NotrequiredNotnullableEnumInteger
        /// </summary>
        public enum NotrequiredNotnullableEnumIntegerEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_MINUS_1 for value: -1
            /// </summary>
            NUMBER_MINUS_1 = -1
        }


        /// <summary>
        /// Gets or Sets NotrequiredNotnullableEnumInteger
        /// </summary>
        [DataMember(Name = "notrequired_notnullable_enum_integer", EmitDefaultValue = false)]
        public Option<NotrequiredNotnullableEnumIntegerEnum> NotrequiredNotnullableEnumInteger { get; set; }
        /// <summary>
        /// Defines RequiredNullableEnumIntegerOnly
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RequiredNullableEnumIntegerOnlyEnum
        {
            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2,

            /// <summary>
            /// Enum NUMBER_MINUS_2 for value: -2
            /// </summary>
            NUMBER_MINUS_2 = -2
        }


        /// <summary>
        /// Gets or Sets RequiredNullableEnumIntegerOnly
        /// </summary>
        [DataMember(Name = "required_nullable_enum_integer_only", IsRequired = true, EmitDefaultValue = true)]
        public RequiredNullableEnumIntegerOnlyEnum? RequiredNullableEnumIntegerOnly { get; set; }
        /// <summary>
        /// Defines RequiredNotnullableEnumIntegerOnly
        /// </summary>
        public enum RequiredNotnullableEnumIntegerOnlyEnum
        {
            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2,

            /// <summary>
            /// Enum NUMBER_MINUS_2 for value: -2
            /// </summary>
            NUMBER_MINUS_2 = -2
        }


        /// <summary>
        /// Gets or Sets RequiredNotnullableEnumIntegerOnly
        /// </summary>
        [DataMember(Name = "required_notnullable_enum_integer_only", IsRequired = true, EmitDefaultValue = true)]
        public RequiredNotnullableEnumIntegerOnlyEnum RequiredNotnullableEnumIntegerOnly { get; set; }
        /// <summary>
        /// Defines NotrequiredNullableEnumIntegerOnly
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum NotrequiredNullableEnumIntegerOnlyEnum
        {
            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2,

            /// <summary>
            /// Enum NUMBER_MINUS_2 for value: -2
            /// </summary>
            NUMBER_MINUS_2 = -2
        }


        /// <summary>
        /// Gets or Sets NotrequiredNullableEnumIntegerOnly
        /// </summary>
        [DataMember(Name = "notrequired_nullable_enum_integer_only", EmitDefaultValue = true)]
        public Option<NotrequiredNullableEnumIntegerOnlyEnum?> NotrequiredNullableEnumIntegerOnly { get; set; }
        /// <summary>
        /// Defines NotrequiredNotnullableEnumIntegerOnly
        /// </summary>
        public enum NotrequiredNotnullableEnumIntegerOnlyEnum
        {
            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2,

            /// <summary>
            /// Enum NUMBER_MINUS_2 for value: -2
            /// </summary>
            NUMBER_MINUS_2 = -2
        }


        /// <summary>
        /// Gets or Sets NotrequiredNotnullableEnumIntegerOnly
        /// </summary>
        [DataMember(Name = "notrequired_notnullable_enum_integer_only", EmitDefaultValue = false)]
        public Option<NotrequiredNotnullableEnumIntegerOnlyEnum> NotrequiredNotnullableEnumIntegerOnly { get; set; }
        /// <summary>
        /// Defines RequiredNotnullableEnumString
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RequiredNotnullableEnumStringEnum
        {
            /// <summary>
            /// Enum UPPER for value: UPPER
            /// </summary>
            [EnumMember(Value = "UPPER")]
            UPPER = 1,

            /// <summary>
            /// Enum Lower for value: lower
            /// </summary>
            [EnumMember(Value = "lower")]
            Lower = 2,

            /// <summary>
            /// Enum Empty for value: 
            /// </summary>
            [EnumMember(Value = "")]
            Empty = 3,

            /// <summary>
            /// Enum ValuewithTab for value: Value\twith tab
            /// </summary>
            [EnumMember(Value = "Value\twith tab")]
            ValuewithTab = 4,

            /// <summary>
            /// Enum ValueWithQuote for value: Value with \&quot; quote
            /// </summary>
            [EnumMember(Value = "Value with \" quote")]
            ValueWithQuote = 5,

            /// <summary>
            /// Enum ValueWithEscapedQuote for value: Value with escaped \&quot; quote
            /// </summary>
            [EnumMember(Value = "Value with escaped \" quote")]
            ValueWithEscapedQuote = 6,

            /// <summary>
            /// Enum Duplicatevalue for value: Duplicate\nvalue
            /// </summary>
            [EnumMember(Value = "Duplicate\nvalue")]
            Duplicatevalue = 7,

            /// <summary>
            /// Enum Duplicatevalue2 for value: Duplicate\r\nvalue
            /// </summary>
            [EnumMember(Value = "Duplicate\r\nvalue")]
            Duplicatevalue2 = 8
        }


        /// <summary>
        /// Gets or Sets RequiredNotnullableEnumString
        /// </summary>
        [DataMember(Name = "required_notnullable_enum_string", IsRequired = true, EmitDefaultValue = true)]
        public RequiredNotnullableEnumStringEnum RequiredNotnullableEnumString { get; set; }
        /// <summary>
        /// Defines RequiredNullableEnumString
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RequiredNullableEnumStringEnum
        {
            /// <summary>
            /// Enum UPPER for value: UPPER
            /// </summary>
            [EnumMember(Value = "UPPER")]
            UPPER = 1,

            /// <summary>
            /// Enum Lower for value: lower
            /// </summary>
            [EnumMember(Value = "lower")]
            Lower = 2,

            /// <summary>
            /// Enum Empty for value: 
            /// </summary>
            [EnumMember(Value = "")]
            Empty = 3,

            /// <summary>
            /// Enum ValuewithTab for value: Value\twith tab
            /// </summary>
            [EnumMember(Value = "Value\twith tab")]
            ValuewithTab = 4,

            /// <summary>
            /// Enum ValueWithQuote for value: Value with \&quot; quote
            /// </summary>
            [EnumMember(Value = "Value with \" quote")]
            ValueWithQuote = 5,

            /// <summary>
            /// Enum ValueWithEscapedQuote for value: Value with escaped \&quot; quote
            /// </summary>
            [EnumMember(Value = "Value with escaped \" quote")]
            ValueWithEscapedQuote = 6,

            /// <summary>
            /// Enum Duplicatevalue for value: Duplicate\nvalue
            /// </summary>
            [EnumMember(Value = "Duplicate\nvalue")]
            Duplicatevalue = 7,

            /// <summary>
            /// Enum Duplicatevalue2 for value: Duplicate\r\nvalue
            /// </summary>
            [EnumMember(Value = "Duplicate\r\nvalue")]
            Duplicatevalue2 = 8
        }


        /// <summary>
        /// Gets or Sets RequiredNullableEnumString
        /// </summary>
        [DataMember(Name = "required_nullable_enum_string", IsRequired = true, EmitDefaultValue = true)]
        public RequiredNullableEnumStringEnum? RequiredNullableEnumString { get; set; }
        /// <summary>
        /// Defines NotrequiredNullableEnumString
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum NotrequiredNullableEnumStringEnum
        {
            /// <summary>
            /// Enum UPPER for value: UPPER
            /// </summary>
            [EnumMember(Value = "UPPER")]
            UPPER = 1,

            /// <summary>
            /// Enum Lower for value: lower
            /// </summary>
            [EnumMember(Value = "lower")]
            Lower = 2,

            /// <summary>
            /// Enum Empty for value: 
            /// </summary>
            [EnumMember(Value = "")]
            Empty = 3,

            /// <summary>
            /// Enum ValuewithTab for value: Value\twith tab
            /// </summary>
            [EnumMember(Value = "Value\twith tab")]
            ValuewithTab = 4,

            /// <summary>
            /// Enum ValueWithQuote for value: Value with \&quot; quote
            /// </summary>
            [EnumMember(Value = "Value with \" quote")]
            ValueWithQuote = 5,

            /// <summary>
            /// Enum ValueWithEscapedQuote for value: Value with escaped \&quot; quote
            /// </summary>
            [EnumMember(Value = "Value with escaped \" quote")]
            ValueWithEscapedQuote = 6,

            /// <summary>
            /// Enum Duplicatevalue for value: Duplicate\nvalue
            /// </summary>
            [EnumMember(Value = "Duplicate\nvalue")]
            Duplicatevalue = 7,

            /// <summary>
            /// Enum Duplicatevalue2 for value: Duplicate\r\nvalue
            /// </summary>
            [EnumMember(Value = "Duplicate\r\nvalue")]
            Duplicatevalue2 = 8
        }


        /// <summary>
        /// Gets or Sets NotrequiredNullableEnumString
        /// </summary>
        [DataMember(Name = "notrequired_nullable_enum_string", EmitDefaultValue = true)]
        public Option<NotrequiredNullableEnumStringEnum?> NotrequiredNullableEnumString { get; set; }
        /// <summary>
        /// Defines NotrequiredNotnullableEnumString
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum NotrequiredNotnullableEnumStringEnum
        {
            /// <summary>
            /// Enum UPPER for value: UPPER
            /// </summary>
            [EnumMember(Value = "UPPER")]
            UPPER = 1,

            /// <summary>
            /// Enum Lower for value: lower
            /// </summary>
            [EnumMember(Value = "lower")]
            Lower = 2,

            /// <summary>
            /// Enum Empty for value: 
            /// </summary>
            [EnumMember(Value = "")]
            Empty = 3,

            /// <summary>
            /// Enum ValuewithTab for value: Value\twith tab
            /// </summary>
            [EnumMember(Value = "Value\twith tab")]
            ValuewithTab = 4,

            /// <summary>
            /// Enum ValueWithQuote for value: Value with \&quot; quote
            /// </summary>
            [EnumMember(Value = "Value with \" quote")]
            ValueWithQuote = 5,

            /// <summary>
            /// Enum ValueWithEscapedQuote for value: Value with escaped \&quot; quote
            /// </summary>
            [EnumMember(Value = "Value with escaped \" quote")]
            ValueWithEscapedQuote = 6,

            /// <summary>
            /// Enum Duplicatevalue for value: Duplicate\nvalue
            /// </summary>
            [EnumMember(Value = "Duplicate\nvalue")]
            Duplicatevalue = 7,

            /// <summary>
            /// Enum Duplicatevalue2 for value: Duplicate\r\nvalue
            /// </summary>
            [EnumMember(Value = "Duplicate\r\nvalue")]
            Duplicatevalue2 = 8
        }


        /// <summary>
        /// Gets or Sets NotrequiredNotnullableEnumString
        /// </summary>
        [DataMember(Name = "notrequired_notnullable_enum_string", EmitDefaultValue = false)]
        public Option<NotrequiredNotnullableEnumStringEnum> NotrequiredNotnullableEnumString { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNullableOuterEnumDefaultValue
        /// </summary>
        [DataMember(Name = "required_nullable_outerEnumDefaultValue", IsRequired = true, EmitDefaultValue = true)]
        public OuterEnumDefaultValue? RequiredNullableOuterEnumDefaultValue { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNotnullableOuterEnumDefaultValue
        /// </summary>
        [DataMember(Name = "required_notnullable_outerEnumDefaultValue", IsRequired = true, EmitDefaultValue = true)]
        public OuterEnumDefaultValue RequiredNotnullableOuterEnumDefaultValue { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNullableOuterEnumDefaultValue
        /// </summary>
        [DataMember(Name = "notrequired_nullable_outerEnumDefaultValue", EmitDefaultValue = true)]
        public Option<OuterEnumDefaultValue?> NotrequiredNullableOuterEnumDefaultValue { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNotnullableOuterEnumDefaultValue
        /// </summary>
        [DataMember(Name = "notrequired_notnullable_outerEnumDefaultValue", EmitDefaultValue = false)]
        public Option<OuterEnumDefaultValue> NotrequiredNotnullableOuterEnumDefaultValue { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RequiredClass" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RequiredClass() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RequiredClass" /> class.
        /// </summary>
        /// <param name="requiredNullableIntegerProp">requiredNullableIntegerProp (required).</param>
        /// <param name="requiredNotnullableintegerProp">requiredNotnullableintegerProp (required).</param>
        /// <param name="notRequiredNullableIntegerProp">notRequiredNullableIntegerProp.</param>
        /// <param name="notRequiredNotnullableintegerProp">notRequiredNotnullableintegerProp.</param>
        /// <param name="requiredNullableStringProp">requiredNullableStringProp (required).</param>
        /// <param name="requiredNotnullableStringProp">requiredNotnullableStringProp (required).</param>
        /// <param name="notrequiredNullableStringProp">notrequiredNullableStringProp.</param>
        /// <param name="notrequiredNotnullableStringProp">notrequiredNotnullableStringProp.</param>
        /// <param name="requiredNullableBooleanProp">requiredNullableBooleanProp (required).</param>
        /// <param name="requiredNotnullableBooleanProp">requiredNotnullableBooleanProp (required).</param>
        /// <param name="notrequiredNullableBooleanProp">notrequiredNullableBooleanProp.</param>
        /// <param name="notrequiredNotnullableBooleanProp">notrequiredNotnullableBooleanProp.</param>
        /// <param name="requiredNullableDateProp">requiredNullableDateProp (required).</param>
        /// <param name="requiredNotNullableDateProp">requiredNotNullableDateProp (required).</param>
        /// <param name="notRequiredNullableDateProp">notRequiredNullableDateProp.</param>
        /// <param name="notRequiredNotnullableDateProp">notRequiredNotnullableDateProp.</param>
        /// <param name="requiredNotnullableDatetimeProp">requiredNotnullableDatetimeProp (required).</param>
        /// <param name="requiredNullableDatetimeProp">requiredNullableDatetimeProp (required).</param>
        /// <param name="notrequiredNullableDatetimeProp">notrequiredNullableDatetimeProp.</param>
        /// <param name="notrequiredNotnullableDatetimeProp">notrequiredNotnullableDatetimeProp.</param>
        /// <param name="requiredNullableEnumInteger">requiredNullableEnumInteger (required).</param>
        /// <param name="requiredNotnullableEnumInteger">requiredNotnullableEnumInteger (required).</param>
        /// <param name="notrequiredNullableEnumInteger">notrequiredNullableEnumInteger.</param>
        /// <param name="notrequiredNotnullableEnumInteger">notrequiredNotnullableEnumInteger.</param>
        /// <param name="requiredNullableEnumIntegerOnly">requiredNullableEnumIntegerOnly (required).</param>
        /// <param name="requiredNotnullableEnumIntegerOnly">requiredNotnullableEnumIntegerOnly (required).</param>
        /// <param name="notrequiredNullableEnumIntegerOnly">notrequiredNullableEnumIntegerOnly.</param>
        /// <param name="notrequiredNotnullableEnumIntegerOnly">notrequiredNotnullableEnumIntegerOnly.</param>
        /// <param name="requiredNotnullableEnumString">requiredNotnullableEnumString (required).</param>
        /// <param name="requiredNullableEnumString">requiredNullableEnumString (required).</param>
        /// <param name="notrequiredNullableEnumString">notrequiredNullableEnumString.</param>
        /// <param name="notrequiredNotnullableEnumString">notrequiredNotnullableEnumString.</param>
        /// <param name="requiredNullableOuterEnumDefaultValue">requiredNullableOuterEnumDefaultValue (required).</param>
        /// <param name="requiredNotnullableOuterEnumDefaultValue">requiredNotnullableOuterEnumDefaultValue (required).</param>
        /// <param name="notrequiredNullableOuterEnumDefaultValue">notrequiredNullableOuterEnumDefaultValue.</param>
        /// <param name="notrequiredNotnullableOuterEnumDefaultValue">notrequiredNotnullableOuterEnumDefaultValue.</param>
        /// <param name="requiredNullableUuid">requiredNullableUuid (required).</param>
        /// <param name="requiredNotnullableUuid">requiredNotnullableUuid (required).</param>
        /// <param name="notrequiredNullableUuid">notrequiredNullableUuid.</param>
        /// <param name="notrequiredNotnullableUuid">notrequiredNotnullableUuid.</param>
        /// <param name="requiredNullableArrayOfString">requiredNullableArrayOfString (required).</param>
        /// <param name="requiredNotnullableArrayOfString">requiredNotnullableArrayOfString (required).</param>
        /// <param name="notrequiredNullableArrayOfString">notrequiredNullableArrayOfString.</param>
        /// <param name="notrequiredNotnullableArrayOfString">notrequiredNotnullableArrayOfString.</param>
        public RequiredClass(int? requiredNullableIntegerProp = default, int requiredNotnullableintegerProp = default, Option<int?> notRequiredNullableIntegerProp = default, Option<int> notRequiredNotnullableintegerProp = default, string requiredNullableStringProp = default, string requiredNotnullableStringProp = default, Option<string> notrequiredNullableStringProp = default, Option<string> notrequiredNotnullableStringProp = default, bool? requiredNullableBooleanProp = default, bool requiredNotnullableBooleanProp = default, Option<bool?> notrequiredNullableBooleanProp = default, Option<bool> notrequiredNotnullableBooleanProp = default, DateOnly? requiredNullableDateProp = default, DateOnly requiredNotNullableDateProp = default, Option<DateOnly?> notRequiredNullableDateProp = default, Option<DateOnly> notRequiredNotnullableDateProp = default, DateTime requiredNotnullableDatetimeProp = default, DateTime? requiredNullableDatetimeProp = default, Option<DateTime?> notrequiredNullableDatetimeProp = default, Option<DateTime> notrequiredNotnullableDatetimeProp = default, RequiredNullableEnumIntegerEnum requiredNullableEnumInteger = default, RequiredNotnullableEnumIntegerEnum requiredNotnullableEnumInteger = default, Option<NotrequiredNullableEnumIntegerEnum> notrequiredNullableEnumInteger = default, Option<NotrequiredNotnullableEnumIntegerEnum> notrequiredNotnullableEnumInteger = default, RequiredNullableEnumIntegerOnlyEnum requiredNullableEnumIntegerOnly = default, RequiredNotnullableEnumIntegerOnlyEnum requiredNotnullableEnumIntegerOnly = default, Option<NotrequiredNullableEnumIntegerOnlyEnum> notrequiredNullableEnumIntegerOnly = default, Option<NotrequiredNotnullableEnumIntegerOnlyEnum> notrequiredNotnullableEnumIntegerOnly = default, RequiredNotnullableEnumStringEnum requiredNotnullableEnumString = default, RequiredNullableEnumStringEnum requiredNullableEnumString = default, Option<NotrequiredNullableEnumStringEnum> notrequiredNullableEnumString = default, Option<NotrequiredNotnullableEnumStringEnum> notrequiredNotnullableEnumString = default, OuterEnumDefaultValue requiredNullableOuterEnumDefaultValue = default, OuterEnumDefaultValue requiredNotnullableOuterEnumDefaultValue = default, Option<OuterEnumDefaultValue> notrequiredNullableOuterEnumDefaultValue = default, Option<OuterEnumDefaultValue> notrequiredNotnullableOuterEnumDefaultValue = default, Guid? requiredNullableUuid = default, Guid requiredNotnullableUuid = default, Option<Guid?> notrequiredNullableUuid = default, Option<Guid> notrequiredNotnullableUuid = default, List<string> requiredNullableArrayOfString = default, List<string> requiredNotnullableArrayOfString = default, Option<List<string>> notrequiredNullableArrayOfString = default, Option<List<string>> notrequiredNotnullableArrayOfString = default)
        {
            // to ensure "requiredNotnullableStringProp" (not nullable) is not null
            if (requiredNotnullableStringProp == null)
            {
                throw new ArgumentNullException("requiredNotnullableStringProp isn't a nullable property for RequiredClass and cannot be null");
            }
            // to ensure "notrequiredNotnullableStringProp" (not nullable) is not null
            if (notrequiredNotnullableStringProp.IsSet && notrequiredNotnullableStringProp.Value == null)
            {
                throw new ArgumentNullException("notrequiredNotnullableStringProp isn't a nullable property for RequiredClass and cannot be null");
            }
            // to ensure "requiredNotnullableArrayOfString" (not nullable) is not null
            if (requiredNotnullableArrayOfString == null)
            {
                throw new ArgumentNullException("requiredNotnullableArrayOfString isn't a nullable property for RequiredClass and cannot be null");
            }
            // to ensure "notrequiredNotnullableArrayOfString" (not nullable) is not null
            if (notrequiredNotnullableArrayOfString.IsSet && notrequiredNotnullableArrayOfString.Value == null)
            {
                throw new ArgumentNullException("notrequiredNotnullableArrayOfString isn't a nullable property for RequiredClass and cannot be null");
            }
            this.RequiredNullableIntegerProp = requiredNullableIntegerProp;
            this.RequiredNotnullableintegerProp = requiredNotnullableintegerProp;
            this.NotRequiredNullableIntegerProp = notRequiredNullableIntegerProp;
            this.NotRequiredNotnullableintegerProp = notRequiredNotnullableintegerProp;
            this.RequiredNullableStringProp = requiredNullableStringProp;
            this.RequiredNotnullableStringProp = requiredNotnullableStringProp;
            this.NotrequiredNullableStringProp = notrequiredNullableStringProp;
            this.NotrequiredNotnullableStringProp = notrequiredNotnullableStringProp;
            this.RequiredNullableBooleanProp = requiredNullableBooleanProp;
            this.RequiredNotnullableBooleanProp = requiredNotnullableBooleanProp;
            this.NotrequiredNullableBooleanProp = notrequiredNullableBooleanProp;
            this.NotrequiredNotnullableBooleanProp = notrequiredNotnullableBooleanProp;
            this.RequiredNullableDateProp = requiredNullableDateProp;
            this.RequiredNotNullableDateProp = requiredNotNullableDateProp;
            this.NotRequiredNullableDateProp = notRequiredNullableDateProp;
            this.NotRequiredNotnullableDateProp = notRequiredNotnullableDateProp;
            this.RequiredNotnullableDatetimeProp = requiredNotnullableDatetimeProp;
            this.RequiredNullableDatetimeProp = requiredNullableDatetimeProp;
            this.NotrequiredNullableDatetimeProp = notrequiredNullableDatetimeProp;
            this.NotrequiredNotnullableDatetimeProp = notrequiredNotnullableDatetimeProp;
            this.RequiredNullableEnumInteger = requiredNullableEnumInteger;
            this.RequiredNotnullableEnumInteger = requiredNotnullableEnumInteger;
            this.NotrequiredNullableEnumInteger = notrequiredNullableEnumInteger;
            this.NotrequiredNotnullableEnumInteger = notrequiredNotnullableEnumInteger;
            this.RequiredNullableEnumIntegerOnly = requiredNullableEnumIntegerOnly;
            this.RequiredNotnullableEnumIntegerOnly = requiredNotnullableEnumIntegerOnly;
            this.NotrequiredNullableEnumIntegerOnly = notrequiredNullableEnumIntegerOnly;
            this.NotrequiredNotnullableEnumIntegerOnly = notrequiredNotnullableEnumIntegerOnly;
            this.RequiredNotnullableEnumString = requiredNotnullableEnumString;
            this.RequiredNullableEnumString = requiredNullableEnumString;
            this.NotrequiredNullableEnumString = notrequiredNullableEnumString;
            this.NotrequiredNotnullableEnumString = notrequiredNotnullableEnumString;
            this.RequiredNullableOuterEnumDefaultValue = requiredNullableOuterEnumDefaultValue;
            this.RequiredNotnullableOuterEnumDefaultValue = requiredNotnullableOuterEnumDefaultValue;
            this.NotrequiredNullableOuterEnumDefaultValue = notrequiredNullableOuterEnumDefaultValue;
            this.NotrequiredNotnullableOuterEnumDefaultValue = notrequiredNotnullableOuterEnumDefaultValue;
            this.RequiredNullableUuid = requiredNullableUuid;
            this.RequiredNotnullableUuid = requiredNotnullableUuid;
            this.NotrequiredNullableUuid = notrequiredNullableUuid;
            this.NotrequiredNotnullableUuid = notrequiredNotnullableUuid;
            this.RequiredNullableArrayOfString = requiredNullableArrayOfString;
            this.RequiredNotnullableArrayOfString = requiredNotnullableArrayOfString;
            this.NotrequiredNullableArrayOfString = notrequiredNullableArrayOfString;
            this.NotrequiredNotnullableArrayOfString = notrequiredNotnullableArrayOfString;
        }

        /// <summary>
        /// Gets or Sets RequiredNullableIntegerProp
        /// </summary>
        [DataMember(Name = "required_nullable_integer_prop", IsRequired = true, EmitDefaultValue = true)]
        public int?? RequiredNullableIntegerProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNotnullableintegerProp
        /// </summary>
        [DataMember(Name = "required_notnullableinteger_prop", IsRequired = true, EmitDefaultValue = true)]
        public int RequiredNotnullableintegerProp { get; set; }

        /// <summary>
        /// Gets or Sets NotRequiredNullableIntegerProp
        /// </summary>
        [DataMember(Name = "not_required_nullable_integer_prop", EmitDefaultValue = true)]
        public Option<int??> NotRequiredNullableIntegerProp { get; set; }

        /// <summary>
        /// Gets or Sets NotRequiredNotnullableintegerProp
        /// </summary>
        [DataMember(Name = "not_required_notnullableinteger_prop", EmitDefaultValue = false)]
        public Option<int> NotRequiredNotnullableintegerProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNullableStringProp
        /// </summary>
        [DataMember(Name = "required_nullable_string_prop", IsRequired = true, EmitDefaultValue = true)]
        public string? RequiredNullableStringProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNotnullableStringProp
        /// </summary>
        [DataMember(Name = "required_notnullable_string_prop", IsRequired = true, EmitDefaultValue = true)]
        public string RequiredNotnullableStringProp { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNullableStringProp
        /// </summary>
        [DataMember(Name = "notrequired_nullable_string_prop", EmitDefaultValue = true)]
        public Option<string?> NotrequiredNullableStringProp { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNotnullableStringProp
        /// </summary>
        [DataMember(Name = "notrequired_notnullable_string_prop", EmitDefaultValue = false)]
        public Option<string> NotrequiredNotnullableStringProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNullableBooleanProp
        /// </summary>
        [DataMember(Name = "required_nullable_boolean_prop", IsRequired = true, EmitDefaultValue = true)]
        public bool?? RequiredNullableBooleanProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNotnullableBooleanProp
        /// </summary>
        [DataMember(Name = "required_notnullable_boolean_prop", IsRequired = true, EmitDefaultValue = true)]
        public bool RequiredNotnullableBooleanProp { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNullableBooleanProp
        /// </summary>
        [DataMember(Name = "notrequired_nullable_boolean_prop", EmitDefaultValue = true)]
        public Option<bool??> NotrequiredNullableBooleanProp { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNotnullableBooleanProp
        /// </summary>
        [DataMember(Name = "notrequired_notnullable_boolean_prop", EmitDefaultValue = true)]
        public Option<bool> NotrequiredNotnullableBooleanProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNullableDateProp
        /// </summary>
        [DataMember(Name = "required_nullable_date_prop", IsRequired = true, EmitDefaultValue = true)]
        public DateOnly?? RequiredNullableDateProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNotNullableDateProp
        /// </summary>
        [DataMember(Name = "required_not_nullable_date_prop", IsRequired = true, EmitDefaultValue = true)]
        public DateOnly RequiredNotNullableDateProp { get; set; }

        /// <summary>
        /// Gets or Sets NotRequiredNullableDateProp
        /// </summary>
        [DataMember(Name = "not_required_nullable_date_prop", EmitDefaultValue = true)]
        public Option<DateOnly??> NotRequiredNullableDateProp { get; set; }

        /// <summary>
        /// Gets or Sets NotRequiredNotnullableDateProp
        /// </summary>
        [DataMember(Name = "not_required_notnullable_date_prop", EmitDefaultValue = false)]
        public Option<DateOnly> NotRequiredNotnullableDateProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNotnullableDatetimeProp
        /// </summary>
        [DataMember(Name = "required_notnullable_datetime_prop", IsRequired = true, EmitDefaultValue = true)]
        public DateTime RequiredNotnullableDatetimeProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNullableDatetimeProp
        /// </summary>
        [DataMember(Name = "required_nullable_datetime_prop", IsRequired = true, EmitDefaultValue = true)]
        public DateTime?? RequiredNullableDatetimeProp { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNullableDatetimeProp
        /// </summary>
        [DataMember(Name = "notrequired_nullable_datetime_prop", EmitDefaultValue = true)]
        public Option<DateTime??> NotrequiredNullableDatetimeProp { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNotnullableDatetimeProp
        /// </summary>
        [DataMember(Name = "notrequired_notnullable_datetime_prop", EmitDefaultValue = false)]
        public Option<DateTime> NotrequiredNotnullableDatetimeProp { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNullableUuid
        /// </summary>
        /*
        <example>72f98069-206d-4f12-9f12-3d1e525a8e84</example>
        */
        [DataMember(Name = "required_nullable_uuid", IsRequired = true, EmitDefaultValue = true)]
        public Guid?? RequiredNullableUuid { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNotnullableUuid
        /// </summary>
        /*
        <example>72f98069-206d-4f12-9f12-3d1e525a8e84</example>
        */
        [DataMember(Name = "required_notnullable_uuid", IsRequired = true, EmitDefaultValue = true)]
        public Guid RequiredNotnullableUuid { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNullableUuid
        /// </summary>
        /*
        <example>72f98069-206d-4f12-9f12-3d1e525a8e84</example>
        */
        [DataMember(Name = "notrequired_nullable_uuid", EmitDefaultValue = true)]
        public Option<Guid??> NotrequiredNullableUuid { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNotnullableUuid
        /// </summary>
        /*
        <example>72f98069-206d-4f12-9f12-3d1e525a8e84</example>
        */
        [DataMember(Name = "notrequired_notnullable_uuid", EmitDefaultValue = false)]
        public Option<Guid> NotrequiredNotnullableUuid { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNullableArrayOfString
        /// </summary>
        [DataMember(Name = "required_nullable_array_of_string", IsRequired = true, EmitDefaultValue = true)]
        public List<string>? RequiredNullableArrayOfString { get; set; }

        /// <summary>
        /// Gets or Sets RequiredNotnullableArrayOfString
        /// </summary>
        [DataMember(Name = "required_notnullable_array_of_string", IsRequired = true, EmitDefaultValue = true)]
        public List<string> RequiredNotnullableArrayOfString { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNullableArrayOfString
        /// </summary>
        [DataMember(Name = "notrequired_nullable_array_of_string", EmitDefaultValue = true)]
        public Option<List<string>?> NotrequiredNullableArrayOfString { get; set; }

        /// <summary>
        /// Gets or Sets NotrequiredNotnullableArrayOfString
        /// </summary>
        [DataMember(Name = "notrequired_notnullable_array_of_string", EmitDefaultValue = false)]
        public Option<List<string>> NotrequiredNotnullableArrayOfString { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RequiredClass {\n");
            sb.Append("  RequiredNullableIntegerProp: ").Append(RequiredNullableIntegerProp).Append("\n");
            sb.Append("  RequiredNotnullableintegerProp: ").Append(RequiredNotnullableintegerProp).Append("\n");
            sb.Append("  NotRequiredNullableIntegerProp: ").Append(NotRequiredNullableIntegerProp).Append("\n");
            sb.Append("  NotRequiredNotnullableintegerProp: ").Append(NotRequiredNotnullableintegerProp).Append("\n");
            sb.Append("  RequiredNullableStringProp: ").Append(RequiredNullableStringProp).Append("\n");
            sb.Append("  RequiredNotnullableStringProp: ").Append(RequiredNotnullableStringProp).Append("\n");
            sb.Append("  NotrequiredNullableStringProp: ").Append(NotrequiredNullableStringProp).Append("\n");
            sb.Append("  NotrequiredNotnullableStringProp: ").Append(NotrequiredNotnullableStringProp).Append("\n");
            sb.Append("  RequiredNullableBooleanProp: ").Append(RequiredNullableBooleanProp).Append("\n");
            sb.Append("  RequiredNotnullableBooleanProp: ").Append(RequiredNotnullableBooleanProp).Append("\n");
            sb.Append("  NotrequiredNullableBooleanProp: ").Append(NotrequiredNullableBooleanProp).Append("\n");
            sb.Append("  NotrequiredNotnullableBooleanProp: ").Append(NotrequiredNotnullableBooleanProp).Append("\n");
            sb.Append("  RequiredNullableDateProp: ").Append(RequiredNullableDateProp).Append("\n");
            sb.Append("  RequiredNotNullableDateProp: ").Append(RequiredNotNullableDateProp).Append("\n");
            sb.Append("  NotRequiredNullableDateProp: ").Append(NotRequiredNullableDateProp).Append("\n");
            sb.Append("  NotRequiredNotnullableDateProp: ").Append(NotRequiredNotnullableDateProp).Append("\n");
            sb.Append("  RequiredNotnullableDatetimeProp: ").Append(RequiredNotnullableDatetimeProp).Append("\n");
            sb.Append("  RequiredNullableDatetimeProp: ").Append(RequiredNullableDatetimeProp).Append("\n");
            sb.Append("  NotrequiredNullableDatetimeProp: ").Append(NotrequiredNullableDatetimeProp).Append("\n");
            sb.Append("  NotrequiredNotnullableDatetimeProp: ").Append(NotrequiredNotnullableDatetimeProp).Append("\n");
            sb.Append("  RequiredNullableEnumInteger: ").Append(RequiredNullableEnumInteger).Append("\n");
            sb.Append("  RequiredNotnullableEnumInteger: ").Append(RequiredNotnullableEnumInteger).Append("\n");
            sb.Append("  NotrequiredNullableEnumInteger: ").Append(NotrequiredNullableEnumInteger).Append("\n");
            sb.Append("  NotrequiredNotnullableEnumInteger: ").Append(NotrequiredNotnullableEnumInteger).Append("\n");
            sb.Append("  RequiredNullableEnumIntegerOnly: ").Append(RequiredNullableEnumIntegerOnly).Append("\n");
            sb.Append("  RequiredNotnullableEnumIntegerOnly: ").Append(RequiredNotnullableEnumIntegerOnly).Append("\n");
            sb.Append("  NotrequiredNullableEnumIntegerOnly: ").Append(NotrequiredNullableEnumIntegerOnly).Append("\n");
            sb.Append("  NotrequiredNotnullableEnumIntegerOnly: ").Append(NotrequiredNotnullableEnumIntegerOnly).Append("\n");
            sb.Append("  RequiredNotnullableEnumString: ").Append(RequiredNotnullableEnumString).Append("\n");
            sb.Append("  RequiredNullableEnumString: ").Append(RequiredNullableEnumString).Append("\n");
            sb.Append("  NotrequiredNullableEnumString: ").Append(NotrequiredNullableEnumString).Append("\n");
            sb.Append("  NotrequiredNotnullableEnumString: ").Append(NotrequiredNotnullableEnumString).Append("\n");
            sb.Append("  RequiredNullableOuterEnumDefaultValue: ").Append(RequiredNullableOuterEnumDefaultValue).Append("\n");
            sb.Append("  RequiredNotnullableOuterEnumDefaultValue: ").Append(RequiredNotnullableOuterEnumDefaultValue).Append("\n");
            sb.Append("  NotrequiredNullableOuterEnumDefaultValue: ").Append(NotrequiredNullableOuterEnumDefaultValue).Append("\n");
            sb.Append("  NotrequiredNotnullableOuterEnumDefaultValue: ").Append(NotrequiredNotnullableOuterEnumDefaultValue).Append("\n");
            sb.Append("  RequiredNullableUuid: ").Append(RequiredNullableUuid).Append("\n");
            sb.Append("  RequiredNotnullableUuid: ").Append(RequiredNotnullableUuid).Append("\n");
            sb.Append("  NotrequiredNullableUuid: ").Append(NotrequiredNullableUuid).Append("\n");
            sb.Append("  NotrequiredNotnullableUuid: ").Append(NotrequiredNotnullableUuid).Append("\n");
            sb.Append("  RequiredNullableArrayOfString: ").Append(RequiredNullableArrayOfString).Append("\n");
            sb.Append("  RequiredNotnullableArrayOfString: ").Append(RequiredNotnullableArrayOfString).Append("\n");
            sb.Append("  NotrequiredNullableArrayOfString: ").Append(NotrequiredNullableArrayOfString).Append("\n");
            sb.Append("  NotrequiredNotnullableArrayOfString: ").Append(NotrequiredNotnullableArrayOfString).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RequiredClass);
        }

        /// <summary>
        /// Returns true if RequiredClass instances are equal
        /// </summary>
        /// <param name="input">Instance of RequiredClass to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RequiredClass input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.RequiredNullableIntegerProp == input.RequiredNullableIntegerProp ||
                    (this.RequiredNullableIntegerProp != null &&
                    this.RequiredNullableIntegerProp.Equals(input.RequiredNullableIntegerProp))
                ) && 
                (
                    this.RequiredNotnullableintegerProp == input.RequiredNotnullableintegerProp ||
                    this.RequiredNotnullableintegerProp.Equals(input.RequiredNotnullableintegerProp)
                ) && 
                (
                    this.NotRequiredNullableIntegerProp == input.NotRequiredNullableIntegerProp ||
                    
                    this.NotRequiredNullableIntegerProp.Equals(input.NotRequiredNullableIntegerProp)
                ) && 
                (
                    this.NotRequiredNotnullableintegerProp == input.NotRequiredNotnullableintegerProp ||
                    this.NotRequiredNotnullableintegerProp.Equals(input.NotRequiredNotnullableintegerProp)
                ) && 
                (
                    this.RequiredNullableStringProp == input.RequiredNullableStringProp ||
                    (this.RequiredNullableStringProp != null &&
                    this.RequiredNullableStringProp.Equals(input.RequiredNullableStringProp))
                ) && 
                (
                    this.RequiredNotnullableStringProp == input.RequiredNotnullableStringProp ||
                    (this.RequiredNotnullableStringProp != null &&
                    this.RequiredNotnullableStringProp.Equals(input.RequiredNotnullableStringProp))
                ) && 
                (
                    this.NotrequiredNullableStringProp == input.NotrequiredNullableStringProp ||
                    
                    this.NotrequiredNullableStringProp.Equals(input.NotrequiredNullableStringProp)
                ) && 
                (
                    this.NotrequiredNotnullableStringProp == input.NotrequiredNotnullableStringProp ||
                    
                    this.NotrequiredNotnullableStringProp.Equals(input.NotrequiredNotnullableStringProp)
                ) && 
                (
                    this.RequiredNullableBooleanProp == input.RequiredNullableBooleanProp ||
                    (this.RequiredNullableBooleanProp != null &&
                    this.RequiredNullableBooleanProp.Equals(input.RequiredNullableBooleanProp))
                ) && 
                (
                    this.RequiredNotnullableBooleanProp == input.RequiredNotnullableBooleanProp ||
                    this.RequiredNotnullableBooleanProp.Equals(input.RequiredNotnullableBooleanProp)
                ) && 
                (
                    this.NotrequiredNullableBooleanProp == input.NotrequiredNullableBooleanProp ||
                    
                    this.NotrequiredNullableBooleanProp.Equals(input.NotrequiredNullableBooleanProp)
                ) && 
                (
                    this.NotrequiredNotnullableBooleanProp == input.NotrequiredNotnullableBooleanProp ||
                    this.NotrequiredNotnullableBooleanProp.Equals(input.NotrequiredNotnullableBooleanProp)
                ) && 
                (
                    this.RequiredNullableDateProp == input.RequiredNullableDateProp ||
                    (this.RequiredNullableDateProp != null &&
                    this.RequiredNullableDateProp.Equals(input.RequiredNullableDateProp))
                ) && 
                (
                    this.RequiredNotNullableDateProp == input.RequiredNotNullableDateProp ||
                    (this.RequiredNotNullableDateProp != null &&
                    this.RequiredNotNullableDateProp.Equals(input.RequiredNotNullableDateProp))
                ) && 
                (
                    this.NotRequiredNullableDateProp == input.NotRequiredNullableDateProp ||
                    
                    this.NotRequiredNullableDateProp.Equals(input.NotRequiredNullableDateProp)
                ) && 
                (
                    this.NotRequiredNotnullableDateProp == input.NotRequiredNotnullableDateProp ||
                    
                    this.NotRequiredNotnullableDateProp.Equals(input.NotRequiredNotnullableDateProp)
                ) && 
                (
                    this.RequiredNotnullableDatetimeProp == input.RequiredNotnullableDatetimeProp ||
                    (this.RequiredNotnullableDatetimeProp != null &&
                    this.RequiredNotnullableDatetimeProp.Equals(input.RequiredNotnullableDatetimeProp))
                ) && 
                (
                    this.RequiredNullableDatetimeProp == input.RequiredNullableDatetimeProp ||
                    (this.RequiredNullableDatetimeProp != null &&
                    this.RequiredNullableDatetimeProp.Equals(input.RequiredNullableDatetimeProp))
                ) && 
                (
                    this.NotrequiredNullableDatetimeProp == input.NotrequiredNullableDatetimeProp ||
                    
                    this.NotrequiredNullableDatetimeProp.Equals(input.NotrequiredNullableDatetimeProp)
                ) && 
                (
                    this.NotrequiredNotnullableDatetimeProp == input.NotrequiredNotnullableDatetimeProp ||
                    
                    this.NotrequiredNotnullableDatetimeProp.Equals(input.NotrequiredNotnullableDatetimeProp)
                ) && 
                (
                    this.RequiredNullableEnumInteger == input.RequiredNullableEnumInteger ||
                    this.RequiredNullableEnumInteger.Equals(input.RequiredNullableEnumInteger)
                ) && 
                (
                    this.RequiredNotnullableEnumInteger == input.RequiredNotnullableEnumInteger ||
                    this.RequiredNotnullableEnumInteger.Equals(input.RequiredNotnullableEnumInteger)
                ) && 
                (
                    this.NotrequiredNullableEnumInteger == input.NotrequiredNullableEnumInteger ||
                    this.NotrequiredNullableEnumInteger.Equals(input.NotrequiredNullableEnumInteger)
                ) && 
                (
                    this.NotrequiredNotnullableEnumInteger == input.NotrequiredNotnullableEnumInteger ||
                    this.NotrequiredNotnullableEnumInteger.Equals(input.NotrequiredNotnullableEnumInteger)
                ) && 
                (
                    this.RequiredNullableEnumIntegerOnly == input.RequiredNullableEnumIntegerOnly ||
                    this.RequiredNullableEnumIntegerOnly.Equals(input.RequiredNullableEnumIntegerOnly)
                ) && 
                (
                    this.RequiredNotnullableEnumIntegerOnly == input.RequiredNotnullableEnumIntegerOnly ||
                    this.RequiredNotnullableEnumIntegerOnly.Equals(input.RequiredNotnullableEnumIntegerOnly)
                ) && 
                (
                    this.NotrequiredNullableEnumIntegerOnly == input.NotrequiredNullableEnumIntegerOnly ||
                    this.NotrequiredNullableEnumIntegerOnly.Equals(input.NotrequiredNullableEnumIntegerOnly)
                ) && 
                (
                    this.NotrequiredNotnullableEnumIntegerOnly == input.NotrequiredNotnullableEnumIntegerOnly ||
                    this.NotrequiredNotnullableEnumIntegerOnly.Equals(input.NotrequiredNotnullableEnumIntegerOnly)
                ) && 
                (
                    this.RequiredNotnullableEnumString == input.RequiredNotnullableEnumString ||
                    this.RequiredNotnullableEnumString.Equals(input.RequiredNotnullableEnumString)
                ) && 
                (
                    this.RequiredNullableEnumString == input.RequiredNullableEnumString ||
                    this.RequiredNullableEnumString.Equals(input.RequiredNullableEnumString)
                ) && 
                (
                    this.NotrequiredNullableEnumString == input.NotrequiredNullableEnumString ||
                    this.NotrequiredNullableEnumString.Equals(input.NotrequiredNullableEnumString)
                ) && 
                (
                    this.NotrequiredNotnullableEnumString == input.NotrequiredNotnullableEnumString ||
                    this.NotrequiredNotnullableEnumString.Equals(input.NotrequiredNotnullableEnumString)
                ) && 
                (
                    this.RequiredNullableOuterEnumDefaultValue == input.RequiredNullableOuterEnumDefaultValue ||
                    this.RequiredNullableOuterEnumDefaultValue.Equals(input.RequiredNullableOuterEnumDefaultValue)
                ) && 
                (
                    this.RequiredNotnullableOuterEnumDefaultValue == input.RequiredNotnullableOuterEnumDefaultValue ||
                    this.RequiredNotnullableOuterEnumDefaultValue.Equals(input.RequiredNotnullableOuterEnumDefaultValue)
                ) && 
                (
                    this.NotrequiredNullableOuterEnumDefaultValue == input.NotrequiredNullableOuterEnumDefaultValue ||
                    this.NotrequiredNullableOuterEnumDefaultValue.Equals(input.NotrequiredNullableOuterEnumDefaultValue)
                ) && 
                (
                    this.NotrequiredNotnullableOuterEnumDefaultValue == input.NotrequiredNotnullableOuterEnumDefaultValue ||
                    this.NotrequiredNotnullableOuterEnumDefaultValue.Equals(input.NotrequiredNotnullableOuterEnumDefaultValue)
                ) && 
                (
                    this.RequiredNullableUuid == input.RequiredNullableUuid ||
                    (this.RequiredNullableUuid != null &&
                    this.RequiredNullableUuid.Equals(input.RequiredNullableUuid))
                ) && 
                (
                    this.RequiredNotnullableUuid == input.RequiredNotnullableUuid ||
                    (this.RequiredNotnullableUuid != null &&
                    this.RequiredNotnullableUuid.Equals(input.RequiredNotnullableUuid))
                ) && 
                (
                    this.NotrequiredNullableUuid == input.NotrequiredNullableUuid ||
                    
                    this.NotrequiredNullableUuid.Equals(input.NotrequiredNullableUuid)
                ) && 
                (
                    this.NotrequiredNotnullableUuid == input.NotrequiredNotnullableUuid ||
                    
                    this.NotrequiredNotnullableUuid.Equals(input.NotrequiredNotnullableUuid)
                ) && 
                (
                    this.RequiredNullableArrayOfString == input.RequiredNullableArrayOfString ||
                    this.RequiredNullableArrayOfString != null &&
                    input.RequiredNullableArrayOfString != null &&
                    this.RequiredNullableArrayOfString.SequenceEqual(input.RequiredNullableArrayOfString)
                ) && 
                (
                    this.RequiredNotnullableArrayOfString == input.RequiredNotnullableArrayOfString ||
                    this.RequiredNotnullableArrayOfString != null &&
                    input.RequiredNotnullableArrayOfString != null &&
                    this.RequiredNotnullableArrayOfString.SequenceEqual(input.RequiredNotnullableArrayOfString)
                ) && 
                (
                    this.NotrequiredNullableArrayOfString == input.NotrequiredNullableArrayOfString ||
                    this.NotrequiredNullableArrayOfString.IsSet && this.NotrequiredNullableArrayOfString.Value != null &&
                    input.NotrequiredNullableArrayOfString.IsSet && input.NotrequiredNullableArrayOfString.Value != null &&
                    this.NotrequiredNullableArrayOfString.Value.SequenceEqual(input.NotrequiredNullableArrayOfString.Value)
                ) && 
                (
                    this.NotrequiredNotnullableArrayOfString == input.NotrequiredNotnullableArrayOfString ||
                    this.NotrequiredNotnullableArrayOfString.IsSet && this.NotrequiredNotnullableArrayOfString.Value != null &&
                    input.NotrequiredNotnullableArrayOfString.IsSet && input.NotrequiredNotnullableArrayOfString.Value != null &&
                    this.NotrequiredNotnullableArrayOfString.Value.SequenceEqual(input.NotrequiredNotnullableArrayOfString.Value)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RequiredNullableIntegerProp != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNullableIntegerProp.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RequiredNotnullableintegerProp.GetHashCode();
                if (this.NotRequiredNullableIntegerProp.IsSet && this.NotRequiredNullableIntegerProp.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotRequiredNullableIntegerProp.Value.GetHashCode();
                }
                if (this.NotRequiredNotnullableintegerProp.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotRequiredNotnullableintegerProp.Value.GetHashCode();
                }
                if (this.RequiredNullableStringProp != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNullableStringProp.GetHashCode();
                }
                if (this.RequiredNotnullableStringProp != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNotnullableStringProp.GetHashCode();
                }
                if (this.NotrequiredNullableStringProp.IsSet && this.NotrequiredNullableStringProp.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNullableStringProp.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableStringProp.IsSet && this.NotrequiredNotnullableStringProp.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNotnullableStringProp.Value.GetHashCode();
                }
                if (this.RequiredNullableBooleanProp != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNullableBooleanProp.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RequiredNotnullableBooleanProp.GetHashCode();
                if (this.NotrequiredNullableBooleanProp.IsSet && this.NotrequiredNullableBooleanProp.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNullableBooleanProp.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableBooleanProp.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNotnullableBooleanProp.Value.GetHashCode();
                }
                if (this.RequiredNullableDateProp != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNullableDateProp.GetHashCode();
                }
                if (this.RequiredNotNullableDateProp != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNotNullableDateProp.GetHashCode();
                }
                if (this.NotRequiredNullableDateProp.IsSet && this.NotRequiredNullableDateProp.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotRequiredNullableDateProp.Value.GetHashCode();
                }
                if (this.NotRequiredNotnullableDateProp.IsSet && this.NotRequiredNotnullableDateProp.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotRequiredNotnullableDateProp.Value.GetHashCode();
                }
                if (this.RequiredNotnullableDatetimeProp != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNotnullableDatetimeProp.GetHashCode();
                }
                if (this.RequiredNullableDatetimeProp != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNullableDatetimeProp.GetHashCode();
                }
                if (this.NotrequiredNullableDatetimeProp.IsSet && this.NotrequiredNullableDatetimeProp.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNullableDatetimeProp.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableDatetimeProp.IsSet && this.NotrequiredNotnullableDatetimeProp.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNotnullableDatetimeProp.Value.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RequiredNullableEnumInteger.GetHashCode();
                hashCode = (hashCode * 59) + this.RequiredNotnullableEnumInteger.GetHashCode();
                if (this.NotrequiredNullableEnumInteger.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNullableEnumInteger.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableEnumInteger.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNotnullableEnumInteger.Value.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RequiredNullableEnumIntegerOnly.GetHashCode();
                hashCode = (hashCode * 59) + this.RequiredNotnullableEnumIntegerOnly.GetHashCode();
                if (this.NotrequiredNullableEnumIntegerOnly.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNullableEnumIntegerOnly.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableEnumIntegerOnly.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNotnullableEnumIntegerOnly.Value.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RequiredNotnullableEnumString.GetHashCode();
                hashCode = (hashCode * 59) + this.RequiredNullableEnumString.GetHashCode();
                if (this.NotrequiredNullableEnumString.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNullableEnumString.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableEnumString.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNotnullableEnumString.Value.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RequiredNullableOuterEnumDefaultValue.GetHashCode();
                hashCode = (hashCode * 59) + this.RequiredNotnullableOuterEnumDefaultValue.GetHashCode();
                if (this.NotrequiredNullableOuterEnumDefaultValue.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNullableOuterEnumDefaultValue.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableOuterEnumDefaultValue.IsSet)
                {
                hashCode = (hashCode * 59) + this.NotrequiredNotnullableOuterEnumDefaultValue.Value.GetHashCode();
                }
                if (this.RequiredNullableUuid != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNullableUuid.GetHashCode();
                }
                if (this.RequiredNotnullableUuid != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNotnullableUuid.GetHashCode();
                }
                if (this.NotrequiredNullableUuid.IsSet && this.NotrequiredNullableUuid.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNullableUuid.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableUuid.IsSet && this.NotrequiredNotnullableUuid.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNotnullableUuid.Value.GetHashCode();
                }
                if (this.RequiredNullableArrayOfString != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNullableArrayOfString.GetHashCode();
                }
                if (this.RequiredNotnullableArrayOfString != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredNotnullableArrayOfString.GetHashCode();
                }
                if (this.NotrequiredNullableArrayOfString.IsSet && this.NotrequiredNullableArrayOfString.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNullableArrayOfString.Value.GetHashCode();
                }
                if (this.NotrequiredNotnullableArrayOfString.IsSet && this.NotrequiredNotnullableArrayOfString.Value != null)
                {
                    hashCode = (hashCode * 59) + this.NotrequiredNotnullableArrayOfString.Value.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
